{
  "(여기에 실제 GIF가 들어갑니다)": "(Actual GIF will be placed here)",
  "1️⃣ 언어 감지 및 설정": "1️⃣ Language Detection & Setup",
  "2️⃣ 번역 프로세스": "2️⃣ Translation Process",
  "3분 안에 i18nexus를 프로젝트에 적용하세요": "Apply i18nexus to your project in 3 minutes",
  "3분 안에 프로젝트에 적용하기": "Apply to your project in 3 minutes",
  "3️⃣ 언어 전환 흐름": "3️⃣ Language Change Flow",
  "= useTranslation() 훅 주입": "= Inject useTranslation() hook",
  "• 기존 번역은 모두 보존": "• Preserves all existing translations",
  "• 모든 한국어 텍스트를 t(\"...\") 로 래핑": "• Wraps all Korean text with t(\"...\")",
  "• 새로운 키만 추가": "• Adds only new keys",
  "• 자동으로 알파벳순 정렬": "• Automatically sorts alphabetically",
  "• useTranslation import 추가": "• Adds useTranslation import",
  "✨ 자동으로 처리되는 것들:": "✨ Automatically handled:",
  "💡 자동으로 import 추가 → useTranslation 훅 주입 → 한국어 텍스트 래핑": "💡 Auto add import → Inject useTranslation hook → Wrap Korean text",
  "🔍 스마트 병합 기능:": "🔍 Smart Merging:",
  "개발자 경험 최우선": "Developer Experience First",
  "개발자 친화적": "Developer Friendly",
  "구조와 동작 원리": "Structure & Principles",
  "기능별 상세 가이드": "Detailed Feature Guides",
  "기존 코드의 모든 한국어를 자동으로 t() 함수로 래핑합니다": "Automatically wraps all Korean text in existing code with t() function",
  "도구": "Tools",
  "SSR 번역 테스트": "SSR Translation Test",
  "서버 컴포넌트에서 createServerT() 사용": "Using createServerT() in Server Components",
  "자동 언어 감지": "Auto Language Detection",
  "createServerT()는 자동으로 쿠키에서 언어를 감지합니다.": "createServerT() automatically detects language from cookies.",
  "번역 테스트 결과": "Translation Test Results",
  "빠른 초기 로딩": "Fast Initial Loading",
  "서버에서 미리 번역되어 초기 로딩 시간 단축": "Pre-translated on server reduces initial loading time",
  "SEO 최적화": "SEO Optimization",
  "검색 엔진이 번역된 콘텐츠를 바로 크롤링": "Search engines can crawl translated content directly",
  "메모리 효율": "Memory Efficiency",
  "클라이언트 메모리 사용량 감소": "Reduced client memory usage",
  "동작 원리": "How It Works",
  "모든 t() 함수 호출에서 키를 추출하여 en.json, ko.json 생성/업데이트": "Extract keys from all t() calls and create/update en.json, ko.json",
  "번역 키 추출": "Extract Translation Keys",
  "번역 함수 훅": "Translation Function Hook",
  "변환 전": "Before Transformation",
  "변환 후": "After Transformation",
  "복잡한 설정 없이 바로 시작할 수 있습니다. TypeScript 완벽 지원으로 타입 안전성을 보장하며, 직관적인 API를 제공합니다.": "Get started immediately without complex configuration. Ensures type safety with perfect TypeScript support and provides an intuitive API.",
  "불필요한 리렌더링을 방지하고, 메모이제이션을 활용하여 최적의 성능을 제공합니다. React 18의 동시성 기능과도 완벽하게 호환됩니다.": "Prevents unnecessary re-renders and provides optimal performance using memoization. Fully compatible with React 18 concurrency features.",
  "빠른 시작": "Quick Start",
  "빠른 시작 →": "Quick Start →",
  "빠른시작": "Quick Start",
  "상세": "Detail",
  "상세 설명": "Detailed Guide",
  "설계 원칙": "Design Principles",
  "성능 최적화": "Performance Optimized",
  "소개": "Intro",
  "수동 작업을 최소화하고 CLI 도구로 모든 반복 작업을 자동화합니다. 개발자는 코드 작성에만 집중하고, 나머지는 도구가 처리합니다.": "Minimizes manual work and automates all repetitive tasks with CLI tools. Developers focus only on coding, tools handle the rest.",
  "수동으로 하나하나 t() 함수를 추가할 필요 없이, CLI 도구가 자동으로 모든 한국어 텍스트를 감지하고 변환합니다.": "No need to manually add t() functions one by one. CLI tools automatically detect and transform all Korean text.",
  "시스템 아키텍처": "System Architecture",
  "실제 동작 모습": "Live Demo",
  "실행 명령어": "Command",
  "언어 관리 클래스": "Language Manager Class",
  "언어 전환 훅": "Language Switcher Hook",
  "완료!": "Done!",
  "완벽한 SSR 지원": "Perfect SSR Support",
  "완전한 React i18n 자동화 툴킷": "Complete React i18n Automation Toolkit",
  "왜 i18nexus인가?": "Why i18nexus?",
  "이제 앱이 완전히 국제화되었습니다": "Your app is now fully internationalized",
  "자동 코드 변환의 힘": "Power of Automatic Code Transformation",
  "자동화 도구 사용법": "Automation Tools Usage",
  "자동화 우선": "Automation First",
  "직관적인 API, 명확한 에러 메시지, 완벽한 TypeScript 지원으로 개발자가 쉽고 빠르게 사용할 수 있도록 설계되었습니다.": "Designed for easy and fast use with intuitive API, clear error messages, and perfect TypeScript support.",
  "클라이언트 라이브러리": "Client Library",
  "패키지 설치": "Package Installation",
  "플러그인 시스템, 커스텀 로더, 다양한 스토리지 백엔드 지원으로 프로젝트의 요구사항에 맞게 확장할 수 있습니다.": "Extensible to meet project requirements with plugin system, custom loaders, and various storage backend support.",
  "하드코딩된 한국어를 자동으로 감지하여 t() 함수로 래핑하고, 번역 파일을\n          관리하는 완전 자동화된 국제화 솔루션입니다.": "Fully automated internationalization solution that automatically detects hardcoded Korean text, wraps it with t() functions, and manages translation files.",
  "한 줄의 명령어로 모든 한국어 텍스트를 자동 변환": "Auto transform all Korean text with one command",
  "한국어 자동 래핑": "Auto Wrap Korean",
  "한국어 텍스트 자동 래핑": "Auto Wrap Korean Text",
  "확장성": "Extensibility",
  "환영합니다": "Welcome",
  "i18nexus 코어 라이브러리와 CLI 도구를 설치합니다": "Install i18nexus core library and CLI tools",
  "i18nexus의 구조와 동작 원리를 이해하세요": "Understand the structure and operating principles of i18nexus",
  "layout.tsx에 I18nProvider를 설정합니다": "Setup I18nProvider in layout.tsx",
  "Next.js App Router와 완벽하게 통합되어 하이드레이션 문제가 전혀 없습니다. 쿠키 기반 언어 관리로 첫 렌더링부터 올바른 언어를 표시합니다.": "Perfectly integrated with Next.js App Router with zero hydration issues. Cookie-based language management displays the correct language from the first render.",
  "Provider 가이드 →": "Provider Guide →",
  "Provider 설정": "Provider Setup",
  "React Context 설정": "React Context Setup",
  "React Context 프로바이더": "React Context Provider",
  "t-wrapper 실행 데모 GIF": "t-wrapper execution demo GIF",
  "t-wrapper가 실시간으로 코드를 변환하는 과정": "The process of t-wrapper transforming code in real-time",
  "Add English translations to en.json file": "Add English translations to en.json file",
  "Add I18nProvider to layout.tsx": "Add I18nProvider to layout.tsx",
  "Adds only new keys from code": "Adds only new keys from code",
  "After": "After",
  "API Reference": "API Reference",
  "Auto wrap Korean text": "Auto wrap Korean text",
  "Automatic Text Wrapping": "Automatic Text Wrapping",
  "Automatically saves language choice": "Automatically saves language choice",
  "Automatically wrap hardcoded Korean strings in your code": "Automatically wrap hardcoded Korean strings in your code",
  "Automatically wraps Korean text with t() and adds imports": "Automatically wraps Korean text with t() and adds imports",
  "Basic Setup": "Basic Setup",
  "Basic Usage": "Basic Usage",
  "Before": "Before",
  "Client Component (app/page.tsx)": "Client Component (app/page.tsx)",
  "Client Components": "Client Components",
  "Complete Workflow": "Complete Workflow",
  "Cookie Persistence": "Cookie Persistence",
  "Cookie-based persistence": "Cookie-based persistence",
  "Create Google Cloud project": "Create Google Cloud project",
  "Create Service Account": "Create Service Account",
  "Current Language": "Current Language",
  "Detects Korean in string literals": "Detects Korean in string literals",
  "Detects Korean in template literals": "Detects Korean in template literals",
  "Detects Korean text in JSX elements": "Detects Korean text in JSX elements",
  "Done!": "Done!",
  "Download": "Download",
  "Download credentials JSON": "Download credentials JSON",
  "Enable Google Sheets API": "Enable Google Sheets API",
  "Extract Keys": "Extract Keys",
  "Extract translation keys": "Extract translation keys",
  "Extract translation keys and merge with existing files intelligently": "Extract translation keys and merge with existing files intelligently",
  "Full type safety included": "Full type safety included",
  "Generate translation files from wrapped text": "Generate translation files from wrapped text",
  "Google Sheets Integration": "Google Sheets Integration",
  "Google Sheets sync": "Google Sheets sync",
  "Hook for accessing translation function in client components": "Hook for accessing translation function in client components",
  "Hook for language switching and state management": "Hook for language switching and state management",
  "I18nProvider": "I18nProvider",
  "Install": "Install",
  "Installation": "Installation",
  "Key Features": "Key Features",
  "Learn more": "Learn more",
  "Live Demo": "Live Demo",
  "No layout shift on load": "No layout shift on load",
  "Optional": "Optional",
  "Perfect Next.js compatibility": "Perfect Next.js compatibility",
  "Powerful automation tools for wrapping text and managing translations": "Powerful automation tools for wrapping text and managing translations",
  "Preserves all existing translations": "Preserves all existing translations",
  "Preserves code formatting": "Preserves code formatting",
  "Quick Start": "Quick Start",
  "React Context provider with cookie-based language persistence and SSR support": "React Context provider with cookie-based language persistence and SSR support",
  "Recommended Structure": "Recommended Structure",
  "Server Components": "Server Components",
  "Server Layout (app/layout.tsx)": "Server Layout (app/layout.tsx)",
  "Setup I18nProvider in layout.tsx with cookie detection": "Setup I18nProvider in layout.tsx with cookie detection",
  "Setup Provider": "Setup Provider",
  "Setup Required": "Setup Required",
  "Share Sheet with service account": "Share Sheet with service account",
  "Shows detailed statistics": "Shows detailed statistics",
  "Skips already wrapped text": "Skips already wrapped text",
  "Smart Detection": "Smart Detection",
  "Smart Key Extraction": "Smart Key Extraction",
  "Smart Merging Features": "Smart Merging Features",
  "Sorts keys alphabetically": "Sorts keys alphabetically",
  "SSR Ready": "SSR Ready",
  "Store in lib/translations/ as JSON": "Store in lib/translations/ as JSON",
  "Switch Language": "Switch Language",
  "Sync translations with Google Sheets for team collaboration": "Sync translations with Google Sheets for team collaboration",
  "Sync with Sheets": "Sync with Sheets",
  "Team Collaboration": "Team Collaboration",
  "The extractor intelligently merges with existing translations:": "The extractor intelligently merges with existing translations:",
  "This demo follows the recommended Next.js App Router structure:": "This demo follows the recommended Next.js App Router structure:",
  "Translate": "Translate",
  "Translation Examples": "Translation Examples",
  "Translation Files": "Translation Files",
  "Try switching - saved in cookies!": "Try switching - saved in cookies!",
  "TypeScript": "TypeScript",
  "TypeScript support": "TypeScript support",
  "Upload": "Upload",
  "Upload to Google Sheets for team translation": "Upload to Google Sheets for team translation",
  "Use 'use client' with useTranslation() hook": "Use 'use client' with useTranslation() hook",
  "Use Hooks": "Use Hooks",
  "Use useTranslation() in components": "Use useTranslation() in components",
  "Why i18nexus?": "Why i18nexus?",
  "Wrap Korean Text": "Wrap Korean Text",
  "Your app is fully internationalized and ready to deploy": "Your app is fully internationalized and ready to deploy",
  "Zero Hydration": "Zero Hydration",
  "Zero hydration issues": "Zero hydration issues",
  "Zero hydration mismatch": "Zero hydration mismatch",
  "SSR 번역 테스트": "SSR Translation Test",
  "서버 컴포넌트에서 createServerT() 사용": "Using createServerT() in Server Components",
  "자동 언어 감지": "Auto Language Detection",
  "createServerT()는 자동으로 쿠키에서 언어를 감지합니다.": "createServerT() automatically detects language from cookies.",
  "번역 테스트 결과": "Translation Test Results",
  "빠른 초기 로딩": "Fast Initial Loading",
  "서버에서 미리 번역되어 초기 로딩 시간 단축": "Pre-translated on server reduces initial loading time",
  "SEO 최적화": "SEO Optimization",
  "검색 엔진이 번역된 콘텐츠를 바로 크롤링": "Search engines can crawl translated content directly",
  "메모리 효율": "Memory Efficiency",
  "클라이언트 메모리 사용량 감소": "Reduced client memory usage"
}
