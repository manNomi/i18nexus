{
  "(여기에 실제 GIF가 들어갑니다)": "(여기에 실제 GIF가 들어갑니다)",
  "1️⃣ 언어 감지 및 설정": "1️⃣ 언어 감지 및 설정",
  "2️⃣ 번역 프로세스": "2️⃣ 번역 프로세스",
  "3분 안에 i18nexus를 프로젝트에 적용하세요": "3분 안에 i18nexus를 프로젝트에 적용하세요",
  "3분 안에 프로젝트에 적용하기": "3분 안에 프로젝트에 적용하기",
  "3️⃣ 언어 전환 흐름": "3️⃣ 언어 전환 흐름",
  "= useTranslation() 훅 주입": "= useTranslation() 훅 주입",
  "• 기존 번역은 모두 보존": "• 기존 번역은 모두 보존",
  "• 모든 한국어 텍스트를 t(\"...\") 로 래핑": "• 모든 한국어 텍스트를 t(\"...\") 로 래핑",
  "• 새로운 키만 추가": "• 새로운 키만 추가",
  "• 자동으로 알파벳순 정렬": "• 자동으로 알파벳순 정렬",
  "• useTranslation import 추가": "• useTranslation import 추가",
  "✨ 자동으로 처리되는 것들:": "✨ 자동으로 처리되는 것들:",
  "💡 자동으로 import 추가 → useTranslation 훅 주입 → 한국어 텍스트 래핑": "💡 자동으로 import 추가 → useTranslation 훅 주입 → 한국어 텍스트 래핑",
  "🔍 스마트 병합 기능:": "🔍 스마트 병합 기능:",
  "개발자 경험 최우선": "개발자 경험 최우선",
  "개발자 친화적": "개발자 친화적",
  "구조와 동작 원리": "구조와 동작 원리",
  "기능별 상세 가이드": "기능별 상세 가이드",
  "기존 코드의 모든 한국어를 자동으로 t() 함수로 래핑합니다": "기존 코드의 모든 한국어를 자동으로 t() 함수로 래핑합니다",
  "도구": "도구",
  "동작 원리": "동작 원리",
  "모든 t() 함수 호출에서 키를 추출하여 en.json, ko.json 생성/업데이트": "모든 t() 함수 호출에서 키를 추출하여 en.json, ko.json 생성/업데이트",
  "번역 키 추출": "번역 키 추출",
  "번역 함수 훅": "번역 함수 훅",
  "변환 전": "변환 전",
  "변환 후": "변환 후",
  "복잡한 설정 없이 바로 시작할 수 있습니다. TypeScript 완벽 지원으로 타입 안전성을 보장하며, 직관적인 API를 제공합니다.": "복잡한 설정 없이 바로 시작할 수 있습니다. TypeScript 완벽 지원으로 타입 안전성을 보장하며, 직관적인 API를 제공합니다.",
  "불필요한 리렌더링을 방지하고, 메모이제이션을 활용하여 최적의 성능을 제공합니다. React 18의 동시성 기능과도 완벽하게 호환됩니다.": "불필요한 리렌더링을 방지하고, 메모이제이션을 활용하여 최적의 성능을 제공합니다. React 18의 동시성 기능과도 완벽하게 호환됩니다.",
  "빠른 시작": "빠른 시작",
  "빠른 시작 →": "빠른 시작 →",
  "빠른시작": "빠른시작",
  "상세": "상세",
  "상세 설명": "상세 설명",
  "설계 원칙": "설계 원칙",
  "성능 최적화": "성능 최적화",
  "소개": "소개",
  "수동 작업을 최소화하고 CLI 도구로 모든 반복 작업을 자동화합니다. 개발자는 코드 작성에만 집중하고, 나머지는 도구가 처리합니다.": "수동 작업을 최소화하고 CLI 도구로 모든 반복 작업을 자동화합니다. 개발자는 코드 작성에만 집중하고, 나머지는 도구가 처리합니다.",
  "수동으로 하나하나 t() 함수를 추가할 필요 없이, CLI 도구가 자동으로 모든 한국어 텍스트를 감지하고 변환합니다.": "수동으로 하나하나 t() 함수를 추가할 필요 없이, CLI 도구가 자동으로 모든 한국어 텍스트를 감지하고 변환합니다.",
  "시스템 아키텍처": "시스템 아키텍처",
  "실제 동작 모습": "실제 동작 모습",
  "실행 명령어": "실행 명령어",
  "언어 관리 클래스": "언어 관리 클래스",
  "언어 전환 훅": "언어 전환 훅",
  "완료!": "완료!",
  "완벽한 SSR 지원": "완벽한 SSR 지원",
  "완전한 React i18n 자동화 툴킷": "완전한 React i18n 자동화 툴킷",
  "왜 i18nexus인가?": "왜 i18nexus인가?",
  "이제 앱이 완전히 국제화되었습니다": "이제 앱이 완전히 국제화되었습니다",
  "자동 코드 변환의 힘": "자동 코드 변환의 힘",
  "자동화 도구 사용법": "자동화 도구 사용법",
  "자동화 우선": "자동화 우선",
  "직관적인 API, 명확한 에러 메시지, 완벽한 TypeScript 지원으로 개발자가 쉽고 빠르게 사용할 수 있도록 설계되었습니다.": "직관적인 API, 명확한 에러 메시지, 완벽한 TypeScript 지원으로 개발자가 쉽고 빠르게 사용할 수 있도록 설계되었습니다.",
  "클라이언트 라이브러리": "클라이언트 라이브러리",
  "패키지 설치": "패키지 설치",
  "플러그인 시스템, 커스텀 로더, 다양한 스토리지 백엔드 지원으로 프로젝트의 요구사항에 맞게 확장할 수 있습니다.": "플러그인 시스템, 커스텀 로더, 다양한 스토리지 백엔드 지원으로 프로젝트의 요구사항에 맞게 확장할 수 있습니다.",
  "하드코딩된 한국어를 자동으로 감지하여 t() 함수로 래핑하고, 번역 파일을\n          관리하는 완전 자동화된 국제화 솔루션입니다.": "하드코딩된 한국어를 자동으로 감지하여 t() 함수로 래핑하고, 번역 파일을 관리하는 완전 자동화된 국제화 솔루션입니다.",
  "한 줄의 명령어로 모든 한국어 텍스트를 자동 변환": "한 줄의 명령어로 모든 한국어 텍스트를 자동 변환",
  "한국어 자동 래핑": "한국어 자동 래핑",
  "한국어 텍스트 자동 래핑": "한국어 텍스트 자동 래핑",
  "확장성": "확장성",
  "환영합니다": "환영합니다",
  "i18nexus 코어 라이브러리와 CLI 도구를 설치합니다": "i18nexus 코어 라이브러리와 CLI 도구를 설치합니다",
  "i18nexus의 구조와 동작 원리를 이해하세요": "i18nexus의 구조와 동작 원리를 이해하세요",
  "layout.tsx에 I18nProvider를 설정합니다": "layout.tsx에 I18nProvider를 설정합니다",
  "Next.js App Router와 완벽하게 통합되어 하이드레이션 문제가 전혀 없습니다. 쿠키 기반 언어 관리로 첫 렌더링부터 올바른 언어를 표시합니다.": "Next.js App Router와 완벽하게 통합되어 하이드레이션 문제가 전혀 없습니다. 쿠키 기반 언어 관리로 첫 렌더링부터 올바른 언어를 표시합니다.",
  "Provider 가이드 →": "Provider 가이드 →",
  "Provider 설정": "Provider 설정",
  "React Context 설정": "React Context 설정",
  "React Context 프로바이더": "React Context 프로바이더",
  "t-wrapper 실행 데모 GIF": "t-wrapper 실행 데모 GIF",
  "t-wrapper가 실시간으로 코드를 변환하는 과정": "t-wrapper가 실시간으로 코드를 변환하는 과정",
  "SSR 번역 테스트": "SSR 번역 테스트",
  "서버 컴포넌트에서 createServerT() 사용": "서버 컴포넌트에서 createServerT() 사용",
  "자동 언어 감지": "자동 언어 감지",
  "createServerT()는 자동으로 쿠키에서 언어를 감지합니다.": "createServerT()는 자동으로 쿠키에서 언어를 감지합니다.",
  "번역 테스트 결과": "번역 테스트 결과",
  "빠른 초기 로딩": "빠른 초기 로딩",
  "서버에서 미리 번역되어 초기 로딩 시간 단축": "서버에서 미리 번역되어 초기 로딩 시간 단축",
  "SEO 최적화": "SEO 최적화",
  "검색 엔진이 번역된 콘텐츠를 바로 크롤링": "검색 엔진이 번역된 콘텐츠를 바로 크롤링",
  "메모리 효율": "메모리 효율",
  "클라이언트 메모리 사용량 감소": "클라이언트 메모리 사용량 감소"
}
